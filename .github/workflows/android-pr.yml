#
# Copyright 2020 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Pull Request

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    static_analysis:
        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            -   uses: actions/checkout@v2

            -   name: Setup Android Build
                uses: ./.github/setup-config
                with:
                    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            -   name: Check code lint
                run: ./gradlew detekt beagle:lintDebug

            -   name: Run danger to comment in PR
                env:
                    GITHUB_USER: ${{ env.BEAGLE_CORE_GITHUB_GITHUB_USER }}
                    GITHUB_TOKEN: ${{ env.BEAGLE_CORE_GITHUB_GITHUB_TOKEN }}
                if: always()
                run: '[ ! -z $GITHUB_TOKEN ] && bundle exec fastlane run_danger danger_id:"android_danger" danger_file_path:"android" || echo "Skipping Danger for External Contributor"'
    unit_tests:
        # Use macos because unit test fail in ubuntu the generated file it is different in processor
        runs-on: macos-latest
        timeout-minutes: 20

        steps:
            -   uses: actions/checkout@v2

            -   name: Setup Android Build
                uses: ./.github/setup-config
                with:
                    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            -   name: Run unit tests with jacoco
                run: ./gradlew jacocoDebugTestReport

            -   name: aggregate all report generated
                run: ./gradlew jacocoRootReport

            -   name: send report to sonarqube
                env:
                    GITHUB_USER: ${{ env.BEAGLE_CORE_GITHUB_GITHUB_USER }}
                    GITHUB_TOKEN: ${{ env.BEAGLE_CORE_GITHUB_GITHUB_TOKEN }}
                    SONAR_TOKEN: ${{ env.BEAGLE_CORE_GITHUB_SONAR_TOKEN }}
                run: ./gradlew sonarqube
    assemble_apk:
        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            -   uses: actions/checkout@v2

            -   name: Setup Android Build
                uses: ./.github/setup-config
                with:
                    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            -   name: Assemble production APK
                run: ./gradlew sample:assembleRelease

            -   name: Archive APK
                uses: actions/upload-artifact@v2.2.4
                with:
                    name: release-apk
                    path: sample/build/outputs/apk/release